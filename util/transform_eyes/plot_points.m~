clear;
corresp = importdata('fileCorresp.txt');
%%
w = 100;
h = 50;
r_idx = 37:42;
l_idx = 43:48;

outDir = 'cropped_eyes_transformed';
canon_corresp = gen_canon_corresp_points(w, h, 20, 10);

for i=1:numel(corresp)
    line = corresp{i};
    if line(1)=='!' || line(1)=='~'
        continue
    end
    
    [imPath corrPath] = strtok(line, ' ');
    if isempty(strfind(imPath, '.2.E'))
        continue;
    end
    % Remove space from front
    corrPath = corrPath(2:end);
    try
        corr = importdata(corrPath);
    catch
        fprintf('Error: no corresp. exists for %s\n', imPath);
        continue;
    end

    % Calculate raw correspondences relative to the eye centroids
    centroid_right = calculate_eye_centroid(corr(r_idx, :));
    centroid_left = calculate_eye_centroid(corr(l_idx, :));    
    corr_left = bsxfun(@minus, corr(l_idx, :), centroid_left);
    cl = corr(l_idx, :);
    corr_right = bsxfun(@minus, corr(r_idx, :), centroid_right);
    
    % Calculate the homography
    H_left = findHomography(canon_corresp, corr_left);
    
    if i>500
        imorig = flipdim(imread(imPath), 2);
        [cxl cyl] = crop_eye(corr(l_idx, :), w, h);
        
        close all;
        figure;
        subplot(1, 2, 1);
        imshow(imorig(cyl:cyl+h, cxl:cxl+w, :));  hold on;
        for j=1:6
            plot(cl(j, 1)-cxl, cl(j, 2)-cyl, 'bx'); hold on;
        end
        hold off;

        T = transformEye(w, h, centroid_left, imorig, H_left);
        subplot(1, 2, 2);
        imshow(T/255); hold on;
        for j=1:6
            p = canon_corresp(j, :);
            p = p+centroid_left-[cxl cyl];
            plot(p(1), p(2), 'go', 'MarkerSize', 10); hold on;
        end
        for j=1:6
            p = cl(j, :)-[cxl cyl];
            p = H_left*[p 1]';
            p = floor(p./p(3));

%             p = p+centroid_left-[cxl cyl];
            plot(p(1), p(2), 'bx', 'MarkerSize', 10); hold on;
        end
        hold off;
        keyboard;
    end
%     T = transformEye(w, h,
    

%     
%     c = corr(r_idx, :);
%     colors = {'bx', 'kx', 'gx', 'rx', 'mx', 'yx'};
%     for j=1:size(corr(r_idx, :))
%         plot(c(j, 1)-cxr, c(j, 2)-cyr, colors{j}); hold on;
%     end
%     
%     i
    
end